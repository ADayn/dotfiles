#! /usr/bin/env bash

#
# Options
#

personal_rsa_id_location="$HOME/.ssh/id_rsa"
personal_email='albertdn97@gmail.com'
school_rsa_id_location="$HOME/.ssh/id_rsa_cu"
school_email='Albert.Dayn@Colorado.edu'
dotfiles_ssh='git@github.com:A-Flyin-Muffin/dotfiles.git'


#########################
# Helper funcs and vars #
#########################

# Colors

red='\033[00;31m'
green='\033[00;32m'
yellow='\033[00;33m'
blue='\033[00;34m'
purple='\033[00;35m'
cyan='\033[00;36m'
lgrey='\033[00;37m'

lred='\033[01;31m'
lgreen='\033[01;32m'
lyellow='\033[01;33m'
lblue='\033[01;34m'
lpurple='\033[01;35m'
lcyan='\033[01;36m'
white='\033[01;37m'

normal='\033[0m'

notice() {
	message="$1"
	echoe "${purple}!${normal} $message"
}
# echo with colors
echoe() {
	echo -e "$@"
}

# Prompt for confirmation
yn() {
	question="$1"
	echoe ''
	echoe "${blue}*${normal} ${question}? (y | n)"
	echoe -n "${blue}> ${normal}"
	# Taken from https://stackoverflow.com/questions/226703/how-do-i-prompt-for-yes-no-cancel-input-in-a-linux-shell-script
	while true; do
	    read -n 1 yn
	    echoe ""
	    case $yn in
	        [Yy] )
				return 0
				;;
	        [Nn] )
				return -1
				;;
	        * )
				echoe "${lred}\"$yn\"${normal} is not a recognized option. Choose either ${green}\"y\"${normal} for yes or ${green}\"n\"${normal} for no"
				;;
	    esac
	done
}

skip() {
	echoe "Skipped."
}


#######################
# Universal bootstrap #
#######################

pushd '.'
cd "$HOME"

#
# SSH
#
initialize_ssh() {
	ssh_id_file_location="$1"
	ssh_email="$2"

	notice "Setting up ssh for email = '$ssh_email' in file = '$ssh_id_file_location'."

	# Ask before overwriting
	if [ -f "$ssh_id_file_location" ]; then
		yn "Overwrite current id_rsa key (${ssh_email})" || return -1
		rm "$ssh_id_file_location"
		rm "$ssh_id_file_location.pub"
	fi

	ssh-keygen -t rsa -C "$ssh_email" -f "$ssh_id_file_location"
	ssh-add "$ssh_id_file_location"

	notice 'Here is your public key:'
	echoe ''
	cat "${ssh_id_file_location}.pub"
	echoe ''
	echoe -n "Copy this and add it to github for $ssh_email. Press enter when done..."
	read -s
}

initialize_ssh_personal() {
	initialize_ssh "$personal_rsa_id_location" "$personal_email"
}
yn "Initialize personal ssh key (for ${personal_email})" && initialize_ssh_personal || skip

initialize_ssh_school() {
	initialize_ssh "$school_rsa_id_location" "$school_email"
}
yn "Initialize school ssh key (for ${school_email})" && initialize_ssh_school || skip

set_ssh_yadm() {
	notice "Setting $dotfiles_ssh as origin for yadm."
	yadm remote set-url origin "$dotfiles_ssh"
}
yn "Change yadm to use ssh for repo" && set_ssh_yadm || skip

#
# Submodules
#

# Because Git submodule commands cannot operate without a work tree, they must
# be run from within $HOME (assuming this is the root of your dotfiles)
initialize_submodules() {
	notice 'Initialize yadm submodules.'
	yadm submodule update --recursive --init
	
	notice 'Installing bass.'
	.config/fish/plugins/bass/make install
}
yn 'Initialize submodules' && initialize_submodules || skip

#
# System specific configuration
#

system_type=$(uname -s)

case $system_type in

	#
	# MacOS
	#
	'Darwin' )
		install_homebrew() {
			notice 'Installing Homebrew.'
			/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
			
			notice 'Installing bundle and loading Brewfile.'
			brew bundle --global
		}
		if ! command -v brew >/dev/null 2>&1; then
			yn 'Install Homebrew and load Brewfile' && install_homebrew || skip
		fi
		;;

	#
	# Other
	#
	* )
		echoe "Current system ($system_type) does not have a system specific bootstrap yet"
		;;
esac

if [ "$system_type" = "Darwin" ]; then

  # install homebrew if it's missing
  if ! command -v brew >/dev/null 2>&1; then
    echo "Installing homebrew"
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  if [ -f "$HOME/.Brewfile" ]; then
    echo "Updating homebrew bundle"
    brew bundle --global
  fi

fi

# Finished successfuly
echoe ''
echoe "${green}Bootstrap complete!${normal}"
echoe ''

popd

true
